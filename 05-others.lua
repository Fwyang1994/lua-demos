-- 局部变量和代码块
--[[
Lua语言中的变量在默认情况下是全局变量，所有的局部变量在使用前必须声明。
与全局变量不同，局部变量的生效范围仅限于声明它的代码块。一个代码块（ block ）是一个控制结构的主体，或是一个函数的主体，或是一个代码段（即变量被声明时所在的文件或字符串）
]]

--[[
在Lua语言中，所有的函数都是匿名的（anonymous）。像其他所有的值一样，函数并没有名字。当讨论函数名时，比如print，实际上指的是保存该函数的变量。
虽然我们通常会把函数赋值给全局变量，从而看似给函数起了一个名字，但在很多场景下仍然会保留函数的匿名性。
]]

--[[
由于函数是一种“第一类值”，因此一个显而易见的结果就是：函数不仅可以被存储在全局变量中，还可以被存储在表字段和局部变量中。
大部分Lua语言的库就采用了这种机制（例如io.read和math.sin）。
]]

-- 构造方式
lib = {
    fc = function (any) end
}
lib.fa = function(any)  end
function lib.fb (any) end

-- 对于这种局部函数的使用，Lua语言提供了一种语法糖：
local function f (any) end

--[[
当编写一个被其他函数B包含的函数A时，被包含的函数A可以访问包含其的函数B的所有局部变量，我们将这种特性称为词法定界（ lexical scoping ）
]]





